#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
ScannerCaseSensitive = false
ScannerTable = Compact
Input = String
Parser = LL
#RegularDefinitions
acentuada: [áÁâÂãÃàÀéÉêÊíÍîÎóÓôÔõÕúÚûÛçÇ]
letra: [a-z A-Z]
digito: [0-9]
simbolo: [^\\\n\"]

comentario_linha: "/" "/"[^\n]*
comentario_bloco: /\*([^\*/]*|((\*)*|(/)*)[^\*/]+)*(\*)*\*/

#Tokens
//tokens genéricos
	identificador: ({letra}|{acentuada})(_)?((({letra}|{digito}|{acentuada})+_)*|({letra}|{acentuada}|{digito}))*
	constante_inteira: 0|[1-9][0-9]*
	constante_real: (0|[1-9][0-9]*)\.[0-9]+
	constante_caracter: \"({simbolo}|\\\"|\\\\)*\"


//tokens especificos: palavras reservadas
	algoritmo = identificador: "algoritmo"
	ate = identificador: "até"
	caracter = identificador: "caracter"
	e = identificador: "e"
	entao = identificador: "então"
	escreva = identificador: "escreva"
	falso = identificador: "falso"
	fim = identificador: "fim"
	funcao = identificador: "função"
	inicio = identificador: "início"
	inteiro = identificador: "inteiro"
	interrompa = identificador: "interrompa"
	leia = identificador: "leia"
	logico = identificador: "lógico"
	nao = identificador: "não"
	ou = identificador: "ou"
	procedimento = identificador: "procedimento"
	quebra = identificador: "quebra"
	real = identificador: "real"
	repita = identificador: "repita"
	retorne = identificador: "retorne"
	se = identificador: "se"
	senao = identificador: "senão"
	variaveis = identificador: "variáveis"
	verdadeiro = identificador: "verdadeiro"


//tokens especificos: simbolos especiais
	"+"
	"-"
	"*"
	"/"
	","
	":"
	";"
	"<-"
	"="
	"<>"
	"<"
	"<="
	">"
	">="
	"("
	")"


//ignorar: caracteres de formatação e comentários
	:[\s\t\n]
	:!{comentario_bloco}
	:!{comentario_linha}
#NonTerminals
<programa>
<cabecalho_modulos>
<variaveis_opcional>
<lista_comandos>
<comando>
<comando_1>
<lista_modulos>
<modulo>
<cabecalho>
<funcao_cabecalho>
<procedimento_cabecalho>
<lista_parametros>
<lista_parametros_adicionais>
<parametro>
<lista_identificadores>
<lista_identificadores_adicionais>
<tipo>
<variaveis>
<lista_variaveis>
<lista_variaveis_1>
<variavel>
<entrada_dados>
<saida_dados>
<lista_valores>
<lista_valores_adicionais>
<valor>
<selecao>
<senao_opcional>
<repeticao>
<interrompa>
<retorne>
<parametros_reais>
<lista_expressoes>
<lista_expressoes_adicionais>
<funcao>
<procedimento>
<expressao>
<expressao_1>
<elemento>
<relacional>
<relacional_1>
<operador_relacional>
<aritmetica>
<aritmetica_1>
<termo>
<termo_1>
<fator>
<fator_1>
#Grammar
<programa>::= #15 algoritmo constante_caracter <cabecalho_modulos> <variaveis_opcional> inicio <lista_comandos> fim #16 <lista_modulos> #17;
<cabecalho_modulos>::=<cabecalho><cabecalho_modulos>|î;
<variaveis_opcional>::=<variaveis>|î;
<lista_comandos>::=<comando>";"<lista_comandos>|î;
<comando>::=identificador<comando_1>|<entrada_dados>|<saida_dados>|<selecao>|<repeticao>|<interrompa>|<retorne>;
<comando_1>::="<-" <expressao>|"(" <parametros_reais> ")";
<lista_modulos>::=<modulo><lista_modulos>|î;
<modulo>::=<funcao>|<procedimento>;
<cabecalho>::=<funcao_cabecalho>|<procedimento_cabecalho>;
<funcao_cabecalho>::=funcao identificador "(" <lista_parametros> ")" ":" <tipo> ";";
<procedimento_cabecalho>::=procedimento identificador "(" <lista_parametros> ")" ";";
<lista_parametros>::=<parametro><lista_parametros_adicionais>|î;
<lista_parametros_adicionais>::=";" <parametro><lista_parametros_adicionais>|î;
<parametro>::=<lista_identificadores> ":" <tipo>;
<lista_identificadores>::=identificador<lista_identificadores_adicionais>;
<lista_identificadores_adicionais>::="," identificador<lista_identificadores_adicionais>|î;
<tipo>::=caracter|logico|inteiro|real;
<variaveis>::=variaveis <lista_variaveis>;
<lista_variaveis>::=<variavel><lista_variaveis_1>;
<lista_variaveis_1>::=î|<lista_variaveis>;
<variavel>::=<lista_identificadores> ":" <tipo> ";";
<entrada_dados>::=leia "(" <lista_identificadores> ")";
<saida_dados>::=escreva "(" <lista_valores> ")";
<lista_valores>::=<valor> #7 <lista_valores_adicionais>;
<lista_valores_adicionais>::="," <valor> #7 <lista_valores_adicionais>|î;
<valor>::=<expressao>|quebra #18;
<selecao>::=se <expressao> entao <lista_comandos> <senao_opcional> fim;
<senao_opcional>::=senao <lista_comandos>|î;
<repeticao>::=repita <lista_comandos> ate <expressao>;
<interrompa>::=interrompa;
<retorne>::=retorne <expressao>;
<parametros_reais>::=<lista_expressoes>|î;
<lista_expressoes>::=<expressao><lista_expressoes_adicionais>;
<lista_expressoes_adicionais>::="," <expressao><lista_expressoes_adicionais>|î;
<funcao>::=funcao identificador "(" <lista_parametros> ")" ":" <tipo> ";" <variaveis_opcional> inicio <lista_comandos> fim;
<procedimento>::=procedimento identificador "(" <lista_parametros> ")" ";" <variaveis_opcional> inicio <lista_comandos> fim;
<expressao> ::= <elemento><expressao_1>;
<expressao_1> ::= î|e <elemento> #19 <expressao_1>|ou <elemento> #20 <expressao_1>;
<elemento> ::= <relacional> | verdadeiro #12 | falso #13 | nao <elemento> #14;
<relacional> ::=<aritmetica><relacional_1>;
<relacional_1>::=<operador_relacional> #11 <aritmetica> #10 |î;
<operador_relacional> ::= "=" | "<>" | "<" | "<=" | ">" | ">=";
<aritmetica> ::= <termo><aritmetica_1>;
<aritmetica_1> ::=î| "+" <termo> #1 <aritmetica_1>|"-" <termo> #2 <aritmetica_1>;
<termo> ::=<fator><termo_1>;
<termo_1>::=î|"*" <fator> #3 <termo_1>|"/" <fator> #4 <termo_1>;
<fator> ::= identificador <fator_1> | constante_inteira #5 | constante_real #6 | constante_caracter #21 | "(" <expressao> ")" | "+" <fator> #8 | "-" <fator> #9;
<fator_1>::=î|"(" <lista_parametros> ")";

